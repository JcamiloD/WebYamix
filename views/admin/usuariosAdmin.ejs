<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('partials/head') %>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
        <style>
            .icon-btn {
                background-color: transparent;
                border: none;
                color: white;
                font-size: 1.2rem;
                cursor: pointer;
            }

            .icon-btn:hover {
                color: #ddd;
            }

            .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 25px;
            }

            .switch input {
            opacity: 0;
            width: 0;
            height: 0;
            }

            .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: 0.4s;
            border-radius: 25px;
            }

            .slider:before {
            position: absolute;
            content: "";
            height: 19px;
            width: 19px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: 0.4s;
            border-radius: 50%;
            }

            input:checked + .slider {
            background-color: #2196F3;
        }
        
        input:checked + .slider:before {
            transform: translateX(25px);
        }
        </style>
        <%- include('partials/scripts') %>
        
        
<!-- Incluye los archivos CSS y JS de FullCalendar -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.js"></script>

        <!-- Incluye las librerías necesarias para exportar a Excel y PDF -->
        <script src="https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/html2pdf.js@0.9.2/dist/html2pdf.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/jspdf@2.4.0/dist/jspdf.umd.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/jspdf-autotable@3.5.24/dist/jspdf.plugin.autotable.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/html2pdf.js@0.8.2/dist/html2pdf.bundle.min.js"></script>

        <!-- Enlace a SweetAlert2 desde un CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>



</head>

<body>
    <div class="container-scroller">
        <!-- partial:../../partials/_sidebar.html -->
        <nav class="sidebar sidebar-offcanvas" id="sidebar">
            <%- include('partials/sidebar') %>
        </nav>
        <!-- partial -->
        <div class="container-fluid page-body-wrapper">
            <!-- partial:../../partials/_navbar.html -->
            <nav class="navbar p-0 fixed-top d-flex flex-row">
                <%- include('partials/topbar') %>
            </nav>
            <!-- partial -->
            <div class="main-panel">
                <div class="content-wrapper">
                    <div class="col-lg-12 grid-margin stretch-card">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h3 class="card-title">Usuarios</h3>
                                    <div>
                                        <button id="exportPdf" class="btn btn-outline-secondary btn-fw">
                                            <i class="fas fa-file-pdf"></i> Exportar PDF
                                        </button>
                                        <button class="btn btn-outline-secondary btn-fw" data-toggle="modal"
                                            data-target="#addModal">
                                            <i class="fas fa-plus"></i> Agregar
                                        </button>
                                        <button class="btn btn-outline-secondary btn-fw" onclick="exportToExcel()">
                                            <i class="fas fa-file-excel"></i> Exportar a Excel
                                        </button>

                                    </div>
                                </div>
                                <div class="table-responsive">
                                    <table id="miTabla" class="table table-bordered">
                                        <thead>
                                            <tr>

                                                <th>#</th>

                                                <th>Nombre</th>
                                                <th>Apellidos</th>
                                                <th>Rol</th>
                                                <th>Gmail</th>
                                                <th>Fecha de nacimiento</th>
                                                <th>Fecha de pagos</th>
                                                <th>Estado</th>
                                                <th>Acción</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% if (Array.isArray(data) && data.length > 0) { %>
                                                <% 
                                                    // Filtramos los usuarios según su estado
                                                    const usuariosEstadoEspera = data.filter(usuario => usuario.estado === 'espera');
                                                    const usuariosEstadoHabilitado = data.filter(usuario => usuario.estado === 'habilitado');
                                                    const usuariosEstadoDeshabilitado = data.filter(usuario => usuario.estado === 'deshabilitado');
                                            
                                                    // Concatenamos los usuarios en el orden deseado
                                                    const usuariosOrdenados = [
                                                        ...usuariosEstadoEspera,
                                                        ...usuariosEstadoHabilitado,
                                                        ...usuariosEstadoDeshabilitado
                                                    ];
                                                %>
                                        
                                                <% usuariosOrdenados.forEach((usuario, index) => { %>
                                                    <tr>

                                                        <td><%= index + 1 %></td> <!-- Índice autoincrementable -->
                                                        <td><%= usuario.nombre %></td>
                                                        <td><%= usuario.apellido %></td>
                                                        <td><%= usuario.nombre_rol.charAt(0).toUpperCase() + usuario.nombre_rol.slice(1).toLowerCase() %></td>
                                                        <td><%= usuario.correo %></td>
                                                        <td>
                                                            <% if (usuario.fecha_nacimiento) { %>
                                                                <% 
                                                                    const fechaNacimiento = new Date(usuario.fecha_nacimiento);
                                                                    const dia = fechaNacimiento.getDate();
                                                                    const mes = fechaNacimiento.toLocaleString('es-ES', { month: 'long' }).charAt(0).toUpperCase() + fechaNacimiento.toLocaleString('es-ES', { month: 'long' }).slice(1);
                                                                    const año = fechaNacimiento.getFullYear();
                                                                    
                                                                    // Construimos la fecha en el formato deseado
                                                                    const fechaFinal = `${dia} de ${mes} del ${año}`; // "20 de Febrero del 2001"
                                                                %>
                                                                <%= fechaFinal %>
                                                            <% } else { %>
                                                                Sin fecha de nacimiento
                                                            <% } %>
                                                        </td>
                                                        <td>
                                                            <% if (usuario.pagos) { %>
                                                                <%= `Días ${new Date(usuario.pagos).getDate()}` %>
                                                            <% } else { %>
                                                                Sin pagos
                                                            <% } %>
                                                        </td>
                                                        <td><%= usuario.estado.charAt(0).toUpperCase() + usuario.estado.slice(1).toLowerCase() %></td>
                                                        <td>
                                                            <!-- Botón para editar -->
                                                            <button type="button" class="icon-btn" data-toggle="modal"
                                                                data-target="#editModal"
                                                                data-id_usuario="<%= usuario.id_usuario %>"
                                                                data-nombre="<%= usuario.nombre %>"
                                                                data-apellido="<%= usuario.apellido %>"
                                                                data-fecha_nacimiento="<%= usuario.fecha_nacimiento %>"
                                                                data-gmail="<%= usuario.correo %>"
                                                                data-id_rol="<%= usuario.id_rol %>"
                                                                data-estado="<%= usuario.estado %>"
                                                                data-documentacion="<%= usuario.documentacion %>"
                                                                data-pagos="<%= usuario.pagos %>">
                                                                <i class="fas fa-edit"></i>
                                                            </button>
                                            
                                                            <!-- Botón para deshabilitar (enviar la solicitud directamente) -->
                                                            <% if (usuario.estado === 'habilitado' || usuario.estado === 'espera') { %>
                                                                <button type="button" class="icon-btn"
                                                                        data-id_usuario="<%= usuario.id_usuario %>"
                                                                        data-nombre="<%= usuario.nombre %>"
                                                                        data-apellido="<%= usuario.apellido %>"
                                                                        data-fecha_nacimiento="<%= usuario.fecha_nacimiento %>"
                                                                        data-gmail="<%= usuario.correo %>"
                                                                        data-id_rol="<%= usuario.id_rol %>"
                                                                        data-estado="deshabilitado"
                                                                        data-documentacion="<%= usuario.documentacion %>"
                                                                        data-pagos="<%= usuario.pagos %>"
                                                                        onclick="cambiarEstado(this)">
                                                                    <i class="mdi mdi-block-helper"></i>
                                                                </button>
                                                            <% } %>

                                                            <!-- Botón para habilitar (enviar la solicitud directamente) -->
                                                            <% if (usuario.estado === 'deshabilitado') { %>
                                                                <button type="button" class="icon-btn"
                                                                        data-id_usuario="<%= usuario.id_usuario %>"
                                                                        data-nombre="<%= usuario.nombre %>"
                                                                        data-apellido="<%= usuario.apellido %>"
                                                                        data-fecha_nacimiento="<%= usuario.fecha_nacimiento %>"
                                                                        data-gmail="<%= usuario.correo %>"
                                                                        data-id_rol="<%= usuario.id_rol %>"
                                                                        data-estado="habilitado"
                                                                        data-documentacion="<%= usuario.documentacion %>"
                                                                        data-pagos="<%= usuario.pagos %>"
                                                                        onclick="cambiarEstado(this)">
                                                                    <i class="mdi mdi-check-circle-outline"></i>
                                                                </button>
                                                            <% } %>
                                                        </td>
                                                    </tr>
                                                <% }) %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="9" class="text-center">No hay usuarios disponibles.</td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>                                                                                                         
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    
                    
                    <!-- Modal editar -->
                    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="editModalLabel">Editar Usuario</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <form id="editForm" method="post" action="/editar_usuario">
                                        <input type="hidden" name="id_usuario" id="editIdUsuario" />
                                        <div class="form-group row">
                                            <label for="editRol" class="col-sm-3 col-form-label">Rol</label>
                                            <div class="col-sm-9">
                                                <select class="form-control" name="id_rol" id="editRol" required>
                                                    <% if (roles && roles.length) { %>
                                                        <% roles.forEach(function(rol) { %>
                                                            <option value="<%= rol.id_rol %>">
                                                                <%= rol.nombre_rol.charAt(0).toUpperCase() + rol.nombre_rol.slice(1).toLowerCase() %>
                                                            </option>
                                                        <% }); %>
                                                    <% } else { %>
                                                        <option value="">No hay roles disponibles</option>
                                                    <% } %>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label for="editNombre" class="col-sm-3 col-form-label">Nombre</label>
                                            <div class="col-sm-9">
                                                <input type="text" name="nombre" class="form-control" id="editNombre" placeholder="Nombre" required>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label for="editApellido" class="col-sm-3 col-form-label">Apellidos</label>
                                            <div class="col-sm-9">
                                                <input type="text" name="apellido" class="form-control" id="editApellido" placeholder="Apellidos" required>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label for="editFechaNacimiento" class="col-sm-3 col-form-label">Fecha de nacimiento</label>
                                            <div class="col-sm-9">
                                                <input type="date" name="fecha_nacimiento" class="form-control" id="editFechaNacimiento" required>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label for="editCorreo" class="col-sm-3 col-form-label">Correo</label>
                                            <div class="col-sm-9">
                                                <input type="email" name="correo" class="form-control" id="editCorreo" placeholder="Correo" required>
                                                <div id="editCorreoError" class="invalid-feedback" style="display: none;">
                                                    El correo ya está en uso.
                                                </div>
                                            </div>
                                        </div>


                                        <div class="form-group row">
                                            <label for="editEstado" class="col-sm-3 col-form-label">Estado</label>
                                            <div class="col-sm-9">
                                                <select class="form-control" id="editEstado" name="estado" required>
                                                    <option value="espera">Espera</option>
                                                    <option value="habilitado">Habilitado</option>
                                                    <option value="deshabilitado">Deshabilitado</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label for="editDocumentacion" class="col-sm-3 col-form-label">Documentación</label>
                                            <div class="col-sm-3">
                                                <label class="switch">
                                                    <input type="checkbox" id="editDocumentacion" name="documentacion" value="1"> <!-- Valor del checkbox -->
                                                    <span class="slider round"></span>
                                                </label>
                                            </div>
                                            
                                            <label for="editPagos" class="col-sm-3 col-form-label d-none">Pagos</label>
                                            <div class="col-sm-3">
                                                <input type="date" name="pagos" class="form-control d-none" id="editPagos" required> <!-- Agrega la clase d-none -->
                                            </div>
                                        </div>
                                        
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-dark mr-2" data-dismiss="modal">Cancelar</button>
                                            <button type="submit" class="btn btn-dark">Guardar Cambios</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>


                    


                    <!-- Modal agregar -->
                    <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="addModalLabel">Agregar Usuario</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <div id="error-message" class="alert alert-danger" style="display: none;"></div>
                                    <form method="post" action="/agregar_usuario" id="addForm">
                                        <div class="form-group row">
                                            <label for="addRol" class="col-sm-3 col-form-label">Rol</label>
                                            <div class="col-sm-9">
                                                <select class="form-control" name="id_rol" id="addRol" required>
                                                    <% if (roles && roles.length) { %>
                                                        <% roles.forEach(function(rol) { %>
                                                            <option value="<%= rol.id_rol %>"><%= rol.nombre_rol.charAt(0).toUpperCase() + rol.nombre_rol.slice(1).toLowerCase() %></option>
                                                        <% }); %>
                                                    <% } else { %>
                                                        <option value="">No hay roles disponibles</option>
                                                    <% } %>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addNombre" class="col-sm-3 col-form-label">Nombre</label>
                                            <div class="col-sm-9">
                                                <input type="text" name="nombre" class="form-control" id="addNombre" placeholder="Nombre" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addApellido" class="col-sm-3 col-form-label">Apellidos</label>
                                            <div class="col-sm-9">
                                                <input type="text" name="apellido" class="form-control" id="addApellido" placeholder="Apellidos" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addFechaNacimiento" class="col-sm-3 col-form-label">Fecha de nacimiento</label>
                                            <div class="col-sm-9">
                                                <input type="date" name="fecha_nacimiento" class="form-control" id="addFechaNacimiento" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addCorreo" class="col-sm-3 col-form-label">Correo</label>
                                            <div class="col-sm-9">
                                                <input type="email" name="correo" class="form-control" id="addCorreo" placeholder="Correo" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addContrasena" class="col-sm-3 col-form-label">Contraseña</label>
                                            <div class="col-sm-9">
                                                <div class="input-group">
                                                    <input type="password" name="contrasena" class="form-control" id="addContrasena" placeholder="Contraseña" required minlength="6">
                                                    <div class="input-group-append">
                                                        <span class="input-group-text" id="togglePassword" style="cursor: pointer;">
                                                            <i class="fas fa-eye" id="password-eye"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addConfirmarContrasena" class="col-sm-3 col-form-label">Confirmar Contraseña</label>
                                            <div class="col-sm-9">
                                                <div class="input-group">
                                                    <input type="password" name="confirmar_contrasena" class="form-control" id="addConfirmarContrasena" placeholder="Confirmar Contraseña" required minlength="6">
                                                    <div class="input-group-append">
                                                        <span class="input-group-text" id="toggleConfirmPassword" style="cursor: pointer;">
                                                            <i class="fas fa-eye" id="confirm-password-eye"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <!-- Estado ya no está visible en el formulario, se envía "habilitado" por defecto -->
                                            <input type="hidden" name="estado" value="habilitado">
                                        </div>
                                        <div class="form-group row">
                                            <label for="addDocumentacion" class="col-sm-3 col-form-label">Documentación</label>
                                            <div class="col-sm-3">
                                                <label class="switch">
                                                    <input type="checkbox" id="addDocumentacion">
                                                    <span class="slider round"></span>
                                                </label>
                                            </div>

                                            <label for="addPagado" class="col-sm-3 col-form-label">Pagado</label>
                                            <div class="col-sm-3">
                                                <label class="switch">
                                                    <input type="checkbox" id="addPagado">
                                                    <span class="slider round"></span>
                                                </label>
                                            </div>
                                        </div>

                                        <!-- Texto que se mostrará al activar la opción de Pagado -->
                                        <div class="form-group row" id="fechaPagosText" style="display: none;">
                                            <div class="col-sm-12 text-center">
                                                <p id="fechaPagosMensaje" style="font-style: italic; color: #555;"></p>
                                            </div>
                                        </div>

                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-dark mr-2" data-dismiss="modal">Cancelar</button>
                                            <button type="submit" class="btn btn-dark">Guardar</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>



                    <!-- content-wrapper ends -->
                    <!-- partial:../../partials/_footer.html -->
                    <footer class="footer">
                        <div class="d-sm-flex justify-content-center justify-content-sm-between">
                            <span class="text-muted d-block text-center text-sm-left d-sm-inline-block">Copyright ©
                                bootstrapdash.com 2020</span>
                            <span class="float-none float-sm-right d-block mt-1 mt-sm-0 text-center"> Free <a
                                    href="https://www.bootstrapdash.com/bootstrap-admin-template/"
                                    target="_blank">Bootstrap admin templates</a> from Bootstrapdash.com</span>
                        </div>
                    </footer>
                    <!-- partial -->
                </div>
                <!-- main-panel ends -->
            </div>
            <!-- page-body-wrapper ends -->
        </div>
        <!-- container-scroller -->
        <!-- plugins:js -->
            <!-- Asegúrate de tener estos enlaces en el <head> o justo antes de cerrar el body -->
            
                <script>
                    // Función para mostrar/ocultar la contraseña
                    const togglePassword = document.getElementById("togglePassword");
                    const passwordField = document.getElementById("addContrasena");
                    const toggleConfirmPassword = document.getElementById("toggleConfirmPassword");
                    const confirmPasswordField = document.getElementById("addConfirmarContrasena");
                
                    togglePassword.addEventListener("click", function () {
                        const type = passwordField.type === "password" ? "text" : "password";
                        passwordField.type = type;
                
                        // Cambiar el icono del ojo
                        const icon = passwordField.type === "password" ? "fa-eye" : "fa-eye-slash";
                        document.getElementById("password-eye").classList.replace("fa-eye", icon);
                    });
                
                    toggleConfirmPassword.addEventListener("click", function () {
                        const type = confirmPasswordField.type === "password" ? "text" : "password";
                        confirmPasswordField.type = type;
                
                        // Cambiar el icono del ojo
                        const icon = confirmPasswordField.type === "password" ? "fa-eye" : "fa-eye-slash";
                        document.getElementById("confirm-password-eye").classList.replace("fa-eye", icon);
                    });
                </script>

            <script>
                document.getElementById('editForm').addEventListener('submit', function(e) {
                    e.preventDefault(); // Evita que el formulario se envíe automáticamente
            
                    const email = document.getElementById('editCorreo').value;
                    const idUsuario = document.getElementById('editIdUsuario').value;
            
                    // Lógica para verificar si el correo ya está en uso
                    fetch('http://localhost:4000/api/verificar_correo_editar', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ correo: email, id_usuario: idUsuario })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.existe) {
                            // Si el correo ya está en uso, mostrar mensaje de error
                            document.getElementById('editCorreoError').style.display = 'block';
                            document.getElementById('editCorreo').classList.add('is-invalid');
                        } else {
                            // Si el correo está disponible, enviar el formulario
                            document.getElementById('editForm').submit();
                        }
                    });
                });
            </script>

            <script>
                document.getElementById('addForm').addEventListener('submit', function(e) {
                    const contrasena = document.getElementById('addContrasena').value;
                    const mensajeError = document.getElementById('error-message');

                    // Verifica la longitud mínima de la contraseña
                    if (contrasena.length < 6) {
                        e.preventDefault(); // Evita el envío del formulario
                        mensajeError.innerText = 'La contraseña debe tener al menos 6 caracteres.';
                        mensajeError.style.display = 'block'; // Muestra el mensaje de error
                        return; // Sale de la función
                    } else {
                        mensajeError.style.display = 'none'; // Oculta el mensaje de error si la contraseña es válida
                    }

                    // Aquí puedes añadir más validaciones si es necesario
                });
            </script>
            

            <script>
                $(document).ready(function() {
                    $('#addForm').on('submit', function(event) {
                        event.preventDefault(); // Evitar el envío del formulario
            
                        // Obtener la referencia al formulario
                        const form = $(this);
            
                        // Obtener el correo del input
                        const correo = $('#addCorreo').val();
            
                        // Hacer la llamada AJAX para verificar el correo
                        $.ajax({
                            url: 'http://localhost:4000/api/verificar_correo',
                            type: 'POST',
                            data: { correo: correo },
                            success: function(response) {
                                if (response.existe) {
                                    // Mostrar un mensaje de error si el correo ya está en uso
                                    $('#error-message').text('El correo ya está en uso.').show();
                                } else {
                                    // Si el correo es válido, enviar el formulario
                                    $.ajax({
                                        url: form.attr('action'), // Usar la referencia guardada al formulario
                                        type: 'POST',
                                        data: form.serialize(), // Serializar todos los datos del formulario
                                        success: function() {
                                            // Aquí puedes agregar lógica para manejar la respuesta del servidor
                                            $('#addModal').modal('hide'); // Cerrar la modal
                                            location.reload(); // Recargar la página si es necesario
                                        },
                                        error: function() {
                                            // Manejar errores en la solicitud de agregar usuario
                                            $('#error-message').text('Ocurrió un error al agregar el usuario.').show();
                                        }
                                    });
                                }
                            },
                            error: function() {
                                // Manejar errores en la verificación de correo
                                $('#error-message').text('Ocurrió un error al verificar el correo.').show();
                            }
                        });
                    });
                });
            </script>
            
            
            <script>
                document.getElementById('addPagado').addEventListener('change', function() {
                    const fechaPagosText = document.getElementById('fechaPagosText');
                    const fechaPagosMensaje = document.getElementById('fechaPagosMensaje');
            
                    if (this.checked) {
                        // Obtener el día actual
                        const fechaActual = new Date();
                        const diaActual = fechaActual.getDate(); // Número del día actual
            
                        // Mostrar el mensaje dinámico con la fecha
                        fechaPagosMensaje.textContent = `La fecha de pagos se establecerá el ${diaActual} de cada mes.`;
                        fechaPagosText.style.display = 'block'; // Mostrar el texto
                    } else {
                        fechaPagosText.style.display = 'none'; // Ocultar el texto si se desactiva
                    }
                });
            
                // Validación de contraseñas y envío del formulario
                document.getElementById('addForm').addEventListener('submit', function(event) {
                    const password = document.getElementById('addContrasena').value;
                    const confirmPassword = document.getElementById('addConfirmarContrasena').value;
            
                    if (password !== confirmPassword) {
                        event.preventDefault(); // Evitar el envío del formulario
                        alert("Las contraseñas no coinciden. Por favor, inténtalo de nuevo."); // Mensaje de error
                        return; // Detener el resto del script si hay error en las contraseñas
                    }
            
                    // Obtener el valor del switch de Documentación
                    const documentacionCheckbox = document.getElementById('addDocumentacion');
                    const documentacionValue = documentacionCheckbox.checked ? true : false;
            
                    // Crear un input oculto para enviar el valor booleano del switch de Documentación
                    const hiddenDocumentacionInput = document.createElement('input');
                    hiddenDocumentacionInput.type = 'hidden';
                    hiddenDocumentacionInput.name = 'documentacion';
                    hiddenDocumentacionInput.value = documentacionValue;
                    document.getElementById('addForm').appendChild(hiddenDocumentacionInput);
            
                    // Obtener el valor del switch de Pagado y la fecha del sistema
                    const pagadoCheckbox = document.getElementById('addPagado');
                    if (pagadoCheckbox.checked) {
                        // Obtener la fecha actual
                        const fechaActual = new Date();
                        const diaActual = fechaActual.getDate();
                        const mesActual = fechaActual.getMonth() + 1; // Recuerda que los meses inician desde 0
                        const añoActual = fechaActual.getFullYear();
            
                        // Crear un string de fecha en formato 'YYYY-MM-DD'
                        const fechaString = `${añoActual}-${mesActual < 10 ? '0' : ''}${mesActual}-${diaActual < 10 ? '0' : ''}${diaActual}`;
            
                        // Crear un input oculto para enviar la fecha si el switch de Pagado está activado
                        const hiddenPagadoInput = document.createElement('input');
                        hiddenPagadoInput.type = 'hidden';
                        hiddenPagadoInput.name = 'fecha_pagado';
                        hiddenPagadoInput.value = fechaString;
                        document.getElementById('addForm').appendChild(hiddenPagadoInput);
                    }
                });
            </script>
            

            <script>
                function cambiarEstado(button) {
                    var id_usuario = $(button).data('id_usuario');
                    var nombre = $(button).data('nombre');
                    var apellido = $(button).data('apellido');
                    var fecha_nacimiento = $(button).data('fecha_nacimiento');
                    var gmail = $(button).data('gmail');
                    var estado = $(button).data('estado'); // El estado (habilitado o deshabilitado)
                    var id_rol = $(button).data('id_rol');
                    var documentacion = $(button).data('documentacion') === 1; // Convertir a booleano
                    var pagos = $(button).data('pagos').split('T')[0]; // Extraer solo la fecha

                    console.log(id_usuario, nombre, apellido, fecha_nacimiento, gmail, estado, id_rol, documentacion, pagos);

                    // Enviar los datos con AJAX
                    $.ajax({
                        url: '/editar_usuario/' + id_usuario,  // Usar la misma ruta que el formulario de edición
                        type: 'POST',
                        data: {
                            id_usuario: id_usuario,
                            nombre: nombre,
                            apellido: apellido,
                            fecha_nacimiento: fecha_nacimiento,
                            correo: gmail,
                            estado: estado,  // Estado nuevo (habilitado o deshabilitado)
                            id_rol: id_rol,
                            documentacion: documentacion ? 1 : 0, // Convertir a 1 si está marcado
                            pagos: pagos
                        },
                        success: function(response) {
                            alert('Estado actualizado correctamente');
                            // Aquí puedes actualizar la vista, recargar la página o modificar algo en el DOM
                            location.reload();  // Recargar la página (opcional)
                        },
                        error: function(xhr, status, error) {
                            console.error('Error al cambiar el estado:', error);
                            alert('Hubo un problema al actualizar el estado.');
                        }
                    });
                }

            </script>
            
            
            
            
            
            

            <script>
                $(document).ready(function () {
                    $('#editModal').on('show.bs.modal', function (event) {
                        var button = $(event.relatedTarget); // Botón que activó el modal
                        var id_usuario = button.data('id_usuario');
                        var nombre = button.data('nombre');
                        var apellido = button.data('apellido');
                        var fecha_nacimiento = button.data('fecha_nacimiento');
                        var gmail = button.data('gmail');
                        var estado = button.data('estado');
                        var id_rol = button.data('id_rol');
                        var documentacion = button.data('documentacion') === 1; // Convertir a booleano
                        var pagos = button.data('pagos').split('T')[0]; // Extraer solo la fecha
            
                        console.log(id_usuario, nombre, apellido, fecha_nacimiento, gmail, estado, id_rol, documentacion, pagos); // Verifica que los valores están bien
            
                        var modal = $(this);
            
                        // Asignar los valores al modal
                        modal.find('.modal-body #editIdUsuario').val(id_usuario);
                        modal.find('.modal-body #editNombre').val(nombre);
                        modal.find('.modal-body #editApellido').val(apellido);
                        modal.find('.modal-body #editFechaNacimiento').val(fecha_nacimiento);
                        modal.find('.modal-body #editCorreo').val(gmail);
                        modal.find('.modal-body #editEstado').val(estado);
                        modal.find('.modal-body #editRol').val(id_rol); // Establecer el rol seleccionado
                        modal.find('.modal-body #editDocumentacion').prop('checked', documentacion); // controlar el estado del switch
                        modal.find('.modal-body #editPagos').val(pagos); // Establecer la fecha de pagos
            
                        // Establecer el valor del campo oculto para documentacion
                        modal.find('.modal-body #documentacionHidden').val(documentacion ? 1 : 0); // 1 si está marcado, 0 si no
            
                        // Establecer la acción del formulario para incluir el ID del usuario
                        modal.find('#editForm').attr('action', '/editar_usuario/' + id_usuario);
                    });
                });
            </script>
            
            
            
            
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.0/jspdf.umd.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>



            <script>

                const { jsPDF } = window.jspdf;

                document.getElementById('exportPdf').addEventListener('click', () => {
                    const doc = new jsPDF();

                    html2canvas(document.querySelector('.table-responsive')).then(canvas => {
                        const imgData = canvas.toDataURL('image/png');
                        const imgWidth = 210;
                        const pageHeight = 295;
                        const imgHeight = canvas.height * imgWidth / canvas.width;
                        let heightLeft = imgHeight;
                        let position = 0;

                        doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                        heightLeft -= pageHeight;

                        while (heightLeft >= 0) {
                            position = heightLeft - imgHeight;
                            doc.addPage();
                            doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                            heightLeft -= pageHeight;
                        }

                        doc.save('usuarios.pdf');
                    });
                });
                function exportToExcel() {
                    let wb = XLSX.utils.table_to_book(document.getElementById('miTabla'), { sheet: "Usuarios" });
                    XLSX.writeFile(wb, 'usuarios.xlsx');
                }

                function confirmarEliminacion(id) {
                    console.log(`ID del usuario a eliminar: ${id}`);
                    Swal.fire({
                        title: '¿Estás seguro?',
                        text: "¡No podrás recuperar este usuario después de eliminarlo!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sí, eliminar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(`/eliminar/${id}`, {
                                method: 'DELETE'
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Error al eliminar el usuario');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    console.log(data); // Verifica que se reciba el mensaje correcto
                                    Swal.fire(
                                        'Eliminado!',
                                        'El usuario ha sido eliminado.',
                                        'success'
                                    ).then(() => {
                                        window.location.reload();
                                    });
                                })
                                .catch(error => {
                                    console.error('Error en la eliminación:', error);
                                    Swal.fire(
                                        'Error!',
                                        'Ocurrió un error al eliminar el usuario.',
                                        'error'
                                    );
                                });
                        }
                    });
                }


            </script>
    </div>
</body>

</html>
<script type="text/javascript">
    $(document).ready(function() {
      // Inicialización de FullCalendar
      var calendar = $('#calendar').fullCalendar({
        header: {
          left: 'prev,next today',
          center: 'title',
          right: 'month,agendaWeek,agendaDay'
        },
        locale: 'es',
        defaultView: 'month',
        navLinks: true,
        editable: true,
        eventLimit: true,
        selectable: true,
        selectHelper: false,
    
        // Cargar eventos desde la API
        events: function(start, end, timezone, callback) {
          $.ajax({
            url: 'http://localhost:4000/api/traer_eventos',
            dataType: 'json',
            success: function(data) {
              var events = data.map(function(event) {
                return {
                  _id: event.id_evento,
                  title: event.nombre_evento,
                  start: event.fecha_hora_inicio ? moment(event.fecha_hora_inicio).format('YYYY-MM-DDTHH:mm:ss') : '',
                  end: event.fecha_hora_final ? moment(event.fecha_hora_final).format('YYYY-MM-DDTHH:mm:ss') : '',
                  color: event.color_evento || '#378006',
                  descripcion: event.descripcion,
                  tipo_evento: event.tipo_evento,
                  ubicacion: event.ubicacion,
                  duracion: event.duracion || '',
                  id_curso: event.id_curso // Asegurarnos de que se incluya el campo curso
                };
              });
              callback(events);
            },
            error: function(jqXHR, textStatus, errorThrown) {
              console.error('Error al obtener eventos:', textStatus, errorThrown);
              Swal.fire('Error', 'No se pudieron cargar los eventos', 'error');
            }
          });
        },
    
        select: function(start, end) {
          $('#modalNuevoEvento').load('/modalNuevoEvento', function() {
            $('#exampleModal').modal('show');
    
            var fechaInicio = start.format('YYYY-MM-DDTHH:mm:ss');
            var fechaFin = end.format('YYYY-MM-DDTHH:mm:ss');
    
            $("input[name='fecha_inicio']").val(fechaInicio);
            $("input[name='fecha_fin']").val(fechaFin);
          });
        },
    
        // Renderizar eventos con el botón de eliminar
        eventRender: function(event, element) {
          element.find(".fc-content").prepend("<span class='closeon material-icons'>&#xe5cd;</span>");
          element.find(".closeon").on("click", function() {
            $('#actualizarEvento').modal('hide');
    
            Swal.fire({
              title: '¿Deseas borrar este evento?',
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Sí, borrar',
              cancelButtonText: 'Cancelar'
            }).then((result) => {
              if (result.isConfirmed) {
                $('#calendar').fullCalendar("removeEvents", event._id);
                $.ajax({
                  type: 'DELETE',
                  url: 'http://localhost:4000/api/eliminar_evento/' + event._id,
                  success: function() {
                    Swal.fire('Eliminado', 'El evento fue borrado correctamente.', 'success');
                  },
                  error: function() {
                    Swal.fire('Error', 'Error al eliminar el evento', 'error');
                  }
                });
              }
            });
          });
        },
    
        // Actualizar evento con drag & drop
        eventDrop: function(event) {
          var idEvento = event._id;
          var start = event.start ? event.start.format('YYYY-MM-DDTHH:mm:ss') : '';
          var end = event.end ? event.end.format('YYYY-MM-DDTHH:mm:ss') : start;
          var fechaActual = moment().format('YYYY-MM-DDTHH:mm:ss');
    
          if (start < fechaActual) {
            Swal.fire('Error', 'La fecha de inicio no puede ser anterior a la fecha actual.', 'error');
            $('#calendar').fullCalendar('refetchEvents');
            return;
          }
    
          if (end < start) {
            Swal.fire('Error', 'La fecha de finalización no puede ser anterior a la fecha de inicio.', 'error');
            $('#calendar').fullCalendar('refetchEvents');
            return;
          }
    
          $.ajax({
            url: `http://localhost:4000/api/actualizar_evento/${idEvento}`,
            type: 'POST',
            data: {
              fecha_hora_inicio: start,
              fecha_hora_final: end,
              id_curso: event.id_curso // Asegurarnos de enviar el id_curso al actualizar
            },
            success: function(response) {
              Swal.fire('Actualizado', 'El evento fue actualizado correctamente.', 'success');
            },
            error: function(xhr) {
              Swal.fire('Error', 'Error al actualizar el evento: ' + xhr.responseText, 'error');
            }
          });
        },
    
        // Cargar modal para editar evento
        eventClick: function(event) {
      console.log('Event Clicked');
  
      // Asegúrate de que el modal se elimine cada vez que se haga clic en un evento
      $('#actualizarEvento').remove();
  
      // Cargar el contenido del modal
      $.get('/actualizarEvento', function(response) {
          $('body').append(response);
          
          // Mostrar el modal una vez que se haya cargado el contenido
          $('#actualizarEvento').modal('show');
  
          // Rellenar los campos del formulario con los datos del evento
          $('#idEventoUpdate').val(event._id || '');
          $('#nombre_eventoUpdate').val(event.title || '');
          $('#descripcionUpdate').val(event.descripcion || '');
          $('#tipo_eventoUpdate').val(event.tipo_evento || '');
          $('#ubicacionUpdate').val(event.ubicacion || '');
          $('#fecha_inicioUpdate').val(event.start ? event.start.format('YYYY-MM-DDTHH:mm:ss') : '');
          $('#fecha_finUpdate').val(event.end ? event.end.format('YYYY-MM-DDTHH:mm:ss') : '');
          $('#duracionUpdate').val(event.duracion || '');
          $('#cursoUpdate').val(event.id_curso || ''); // Cargar el curso en el modal de edición
      }).fail(function() {
          Swal.fire('Error', 'Error al cargar el contenido del modal de editar', 'error');
      });
  }
      });
    
      // Manejo del formulario de creación de eventos
      $(document).on('submit', '#formEvento', function(event) {
        event.preventDefault();
    
        var fechaInicio = $("input[name=fecha_inicio]").val();
        var fechaFin = $("input[name=fecha_fin]").val();
        var fechaActual = moment().format('YYYY-MM-DDTHH:mm:ss');
    
        if (fechaInicio < fechaActual) {
          Swal.fire('Error', 'La fecha de inicio no puede ser anterior a la fecha actual.', 'error');
          return;
        }
    
        if (fechaFin < fechaInicio) {
          Swal.fire('Error', 'La fecha de finalización no puede ser anterior a la fecha de inicio.', 'error');
          return;
        }
    
        $.ajax({
          type: $(this).attr('method'),
          url: $(this).attr('action'),
          data: $(this).serialize(),
          success: function() {
            $('#exampleModal').modal('hide');
            $('#calendar').fullCalendar('refetchEvents');
            Swal.fire('Registrado', 'El evento fue registrado correctamente.', 'success');
          },
          error: function() {
            Swal.fire('Error', 'Error al guardar el evento', 'error');
          }
        });
      });
    
      $(document).on('submit', '#formUpdateEvento', function(event) {
        event.preventDefault();
  
        var fechaInicio = $("input[name=fecha_inicioUpdate]").val();
        var fechaFin = $("input[name=fecha_finUpdate]").val();
        var fechaActual = moment().format('YYYY-MM-DDTHH:mm:ss');
  
        if (fechaInicio < fechaActual) {
          Swal.fire('Error', 'La fecha de inicio no puede ser anterior a la fecha actual.', 'error');
          return;
        }
  
        if (fechaFin < fechaInicio) {
          Swal.fire('Error', 'La fecha de finalización no puede ser anterior a la fecha de inicio.', 'error');
          return;
        }
  
        $.ajax({
          type: $(this).attr('method'),
          url: $(this).attr('action') + '/' + $('#idEventoUpdate').val(),
          data: $(this).serialize(),
          success: function() {
            $('#actualizarEvento').modal('hide');
            $('#calendar').fullCalendar('refetchEvents');
            Swal.fire('Actualizado', 'El evento fue actualizado correctamente.', 'success');
          },
          error: function() {
            Swal.fire('Error', 'Error al actualizar el evento', 'error');
          }
        });
      });
    });
  </script>